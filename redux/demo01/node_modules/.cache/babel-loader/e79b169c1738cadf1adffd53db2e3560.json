{"ast":null,"code":"var _jsxFileName = \"D:\\\\demo\\\\demo01\\\\src\\\\TodoList.js\";\n// 这句话可以使用imrc快速生成\n// 也可以使用aaa快速生成\nimport React, { Component } from 'react'; // 引入css样式\n\nimport 'antd/dist/antd.css';\nimport store from './store';\nimport { changeInputAction, changeListAction } from './store/actionCreators';\nimport TodoListUI from './TodoListUI';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.storeChange = () => {\n      this.setState(store.getState());\n    };\n\n    this.changeInputValue = e => {\n      const action = changeInputAction(e.target.value); // 通过 dispatch() 方法传递给 store\n      // 这时 Action就已经完全创建完成了，也和store有了联系\n\n      store.dispatch(action);\n    };\n\n    this.clickBtn = () => {\n      this.state.list.push(this.state.inputValue);\n      const lists = changeListAction(this.state.list);\n      const action = changeInputAction('');\n      store.dispatch(lists);\n      store.dispatch(action);\n    };\n\n    this.deleteItem = index => {\n      this.state.list.splice(index, 1);\n      const lists = changeListAction(this.state.list);\n      store.dispatch(lists);\n    };\n\n    this.state = store.getState(); // 订阅Redux的状态\n\n    store.subscribe(this.storeChange);\n  }\n\n  componentDidUpdate() {\n    axios.get('https://www.baidu.com').then(res => {\n      console.log(res);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(TodoListUI, {\n      inputValue: this.state.inputValue,\n      list: this.state.list,\n      changeInputValue: this.changeInputValue,\n      clickBtn: this.clickBtn,\n      deleteItem: this.deleteItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["D:/demo/demo01/src/TodoList.js"],"names":["React","Component","store","changeInputAction","changeListAction","TodoListUI","axios","TodoList","constructor","props","storeChange","setState","getState","changeInputValue","e","action","target","value","dispatch","clickBtn","state","list","push","inputValue","lists","deleteItem","index","splice","subscribe","componentDidUpdate","get","then","res","console","log","render"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAmD,wBAAnD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAalBC,WAbkB,GAaJ,MAAM;AAClB,WAAKC,QAAL,CAAcT,KAAK,CAACU,QAAN,EAAd;AACD,KAfiB;;AAAA,SAiBlBC,gBAjBkB,GAiBEC,CAAD,IAAO;AACxB,YAAMC,MAAM,GAAGZ,iBAAiB,CAACW,CAAC,CAACE,MAAF,CAASC,KAAV,CAAhC,CADwB,CAGxB;AACA;;AACAf,MAAAA,KAAK,CAACgB,QAAN,CAAeH,MAAf;AACD,KAvBiB;;AAAA,SAyBlBI,QAzBkB,GAyBP,MAAM;AACf,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqB,KAAKF,KAAL,CAAWG,UAAhC;AACA,YAAMC,KAAK,GAAGpB,gBAAgB,CAAC,KAAKgB,KAAL,CAAWC,IAAZ,CAA9B;AACA,YAAMN,MAAM,GAAGZ,iBAAiB,CAAC,EAAD,CAAhC;AAEAD,MAAAA,KAAK,CAACgB,QAAN,CAAeM,KAAf;AACAtB,MAAAA,KAAK,CAACgB,QAAN,CAAeH,MAAf;AACD,KAhCiB;;AAAA,SAkClBU,UAlCkB,GAkCJC,KAAD,IAAW;AACtB,WAAKN,KAAL,CAAWC,IAAX,CAAgBM,MAAhB,CAAuBD,KAAvB,EAA8B,CAA9B;AACA,YAAMF,KAAK,GAAGpB,gBAAgB,CAAC,KAAKgB,KAAL,CAAWC,IAAZ,CAA9B;AAEAnB,MAAAA,KAAK,CAACgB,QAAN,CAAeM,KAAf;AACD,KAvCiB;;AAEhB,SAAKJ,KAAL,GAAalB,KAAK,CAACU,QAAN,EAAb,CAFgB,CAGhB;;AACAV,IAAAA,KAAK,CAAC0B,SAAN,CAAgB,KAAKlB,WAArB;AACD;;AAEDmB,EAAAA,kBAAkB,GAAE;AAClBvB,IAAAA,KAAK,CAACwB,GAAN,CAAU,uBAAV,EAAmCC,IAAnC,CAAyCC,GAAD,IAAO;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAFD;AAGD;;AA8BDG,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,UAAD;AACE,MAAA,UAAU,EAAE,KAAKf,KAAL,CAAWG,UADzB;AAEE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,IAFnB;AAGE,MAAA,gBAAgB,EAAE,KAAKR,gBAHzB;AAIE,MAAA,QAAQ,EAAE,KAAKM,QAJjB;AAKE,MAAA,UAAU,EAAE,KAAKM;AALnB;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AApD8B;;AAuDjC,eAAelB,QAAf","sourcesContent":["// 这句话可以使用imrc快速生成\n// 也可以使用aaa快速生成\nimport React, {Component} from 'react';\n// 引入css样式\nimport 'antd/dist/antd.css';\nimport store from './store';\nimport { changeInputAction, changeListAction} from './store/actionCreators';\nimport TodoListUI from './TodoListUI';\nimport axios from 'axios';\n\nclass TodoList extends Component {\n  constructor(props){\n    super(props);\n    this.state = store.getState();\n    // 订阅Redux的状态\n    store.subscribe(this.storeChange);\n  }\n  \n  componentDidUpdate(){\n    axios.get('https://www.baidu.com').then((res)=>{\n        console.log(res);\n    })\n  }\n\n  storeChange = () => {\n    this.setState(store.getState());\n  }\n\n  changeInputValue = (e) => {\n    const action = changeInputAction(e.target.value);\n\n    // 通过 dispatch() 方法传递给 store\n    // 这时 Action就已经完全创建完成了，也和store有了联系\n    store.dispatch(action);\n  }\n\n  clickBtn = () => {\n    this.state.list.push(this.state.inputValue)\n    const lists = changeListAction(this.state.list);\n    const action = changeInputAction('');\n\n    store.dispatch(lists);\n    store.dispatch(action);\n  }\n\n  deleteItem = (index) => {\n    this.state.list.splice(index, 1);\n    const lists = changeListAction(this.state.list);\n\n    store.dispatch(lists);\n  };\n\n  render() { \n    return ( \n      <TodoListUI \n        inputValue={this.state.inputValue}\n        list={this.state.list}\n        changeInputValue={this.changeInputValue}\n        clickBtn={this.clickBtn}\n        deleteItem={this.deleteItem}\n      />\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}