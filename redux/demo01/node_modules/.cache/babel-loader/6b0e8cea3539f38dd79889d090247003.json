{"ast":null,"code":"var _jsxFileName = \"D:\\\\demo\\\\demo01\\\\src\\\\TodoList.js\";\n// 这句话可以使用imrc快速生成\n// 也可以使用aaa快速生成\nimport React, { Component } from 'react'; // 引入css样式\n\nimport 'antd/dist/antd.css';\nimport { Input, Button, List } from 'antd';\nimport store from './store';\nimport { CHANGE_INPUT, CHANGE_LIST } from './store/actionTypes';\nimport { changeInputAction, changeListAction } from './store/actionCreators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.storeChange = () => {\n      this.setState(store.getState());\n    };\n\n    this.changeInputValue = e => {\n      // 在控制台打印出文本框的变化\n      // console.log(e.target.value);\n      const action = changeInputAction(e.target.value); // 通过 dispatch() 方法传递给 store\n      // 这时 Action就已经完全创建完成了，也和store有了联系\n\n      store.dispatch(action);\n    };\n\n    this.clickBtn = () => {\n      this.state.list.push(this.state.inputValue);\n      const lists = changeListAction(this.state.list);\n      const action = changeInputAction('');\n      store.dispatch(lists);\n      store.dispatch(action);\n    };\n\n    this.deleteItem = index => {\n      this.state.list.splice(index, 1);\n      const lists = changeListAction(this.state.list);\n      store.dispatch(lists);\n    };\n\n    this.state = store.getState(); // 订阅Redux的状态\n\n    store.subscribe(this.storeChange);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: this.state.inputValue,\n          style: {\n            width: '250px'\n          },\n          onChange: this.changeInputValue,\n          value: this.state.inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: this.clickBtn,\n          children: \"\\u589E\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px',\n          width: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          bordered: true,\n          dataSource: this.state.list,\n          renderItem: (item, index) => /*#__PURE__*/_jsxDEV(List.Item, {\n            onClick: this.deleteItem.bind(this, index),\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["D:/demo/demo01/src/TodoList.js"],"names":["React","Component","Input","Button","List","store","CHANGE_INPUT","CHANGE_LIST","changeInputAction","changeListAction","TodoList","constructor","props","storeChange","setState","getState","changeInputValue","e","action","target","value","dispatch","clickBtn","state","list","push","inputValue","lists","deleteItem","index","splice","subscribe","render","width","margin","item","bind"],"mappings":"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","sourcesContent":["// 这句话可以使用imrc快速生成\n// 也可以使用aaa快速生成\nimport React, {Component} from 'react';\n// 引入css样式\nimport 'antd/dist/antd.css';\nimport { Input, Button, List} from 'antd';\nimport store from './store';\nimport { CHANGE_INPUT , CHANGE_LIST } from './store/actionTypes';\nimport { changeInputAction, changeListAction} from './store/actionCreators';\n\n\nclass TodoList extends Component {\n  constructor(props){\n    super(props);\n    this.state = store.getState();\n    // 订阅Redux的状态\n    store.subscribe(this.storeChange);\n  }\n  \n  storeChange = () => {\n    this.setState(store.getState());\n  }\n\n  changeInputValue = (e) => {\n    // 在控制台打印出文本框的变化\n    // console.log(e.target.value);\n    const action = changeInputAction(e.target.value);\n\n    // 通过 dispatch() 方法传递给 store\n    // 这时 Action就已经完全创建完成了，也和store有了联系\n    store.dispatch(action);\n  }\n\n  clickBtn = () => {\n    this.state.list.push(this.state.inputValue)\n    const lists = changeListAction(this.state.list);\n    const action = changeInputAction('');\n\n    store.dispatch(lists);\n    store.dispatch(action);\n  }\n\n  deleteItem = (index) => {\n    this.state.list.splice(index, 1);\n    const lists = changeListAction(this.state.list);\n    \n    store.dispatch(lists);\n  };\n\n  render() { \n    return ( \n      <div>\n        <div>\n          <Input \n            placeholder={this.state.inputValue} \n            style={{ width: '250px' }} \n            onChange={this.changeInputValue}\n            value={this.state.inputValue}\n          />\n          <Button type='primary' onClick={this.clickBtn}>增加</Button>\n        </div>\n        <div style={{margin:'10px', width:'300px'}}>\n          <List\n            bordered\n            dataSource={this.state.list} \n            renderItem={(item, index) => (<List.Item onClick={this.deleteItem.bind(this, index)}>{item}</List.Item>)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}