{"ast":null,"code":"// 用saga的中间件业务逻辑，就都写在这个sagas.js文件里，文件里我们用mySaga来作为入口函数。在入口函数中捕获传递过来的action类型，根据类型不同调用不同的方法。\nimport { takeEvery } from 'redux-saga/effects';\nimport { GET_MY_LIST } from \"./actionTypes\"; // generator函数\n\nfunction* mySaga() {\n  // 等待捕获action\n  yield takeEvery(GET_MY_LIST, getList);\n}\n\nfunction* getList() {\n  console.log('hhhhhh');\n}\n\nexport default mySaga;","map":{"version":3,"sources":["D:/demo/demo01/src/store/sagas.js"],"names":["takeEvery","GET_MY_LIST","mySaga","getList","console","log"],"mappings":"AAAA;AACA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;;AACA,UAAUC,MAAV,GAAmB;AACjB;AACA,QAAMF,SAAS,CAACC,WAAD,EAAcE,OAAd,CAAf;AACD;;AAED,UAAUA,OAAV,GAAoB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;AAED,eAAeH,MAAf","sourcesContent":["// 用saga的中间件业务逻辑，就都写在这个sagas.js文件里，文件里我们用mySaga来作为入口函数。在入口函数中捕获传递过来的action类型，根据类型不同调用不同的方法。\nimport { takeEvery } from 'redux-saga/effects'\nimport { GET_MY_LIST } from \"./actionTypes\";\n\n// generator函数\nfunction* mySaga() {\n  // 等待捕获action\n  yield takeEvery(GET_MY_LIST, getList);\n}\n\nfunction* getList() {\n  console.log('hhhhhh');\n}\n \nexport default mySaga;\n"]},"metadata":{},"sourceType":"module"}