{"ast":null,"code":"var _jsxFileName = \"D:\\\\demo\\\\demo01\\\\src\\\\TodoList.js\";\n// 这句话可以使用imrc快速生成\n// 也可以使用aaa快速生成\nimport React, { Component } from 'react'; // 引入css样式\n\nimport 'antd/dist/antd.css';\nimport { Input, Button, List } from 'antd';\nimport store from './store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeInputValue = e => {\n      // 在控制台打印出文本框的变化\n      // console.log(e.target.value);\n      const action = {\n        // 对action的描述\n        type: 'changeInput',\n        // 要改变的值\n        value: e.target.value\n      }; // 通过 dispatch() 方法传递给 store\n      // 这时 Action就已经完全创建完成了，也和store有了联系\n\n      store.dispatch(action);\n    };\n\n    this.storeChange = () => {\n      this.setState(store.getState());\n    };\n\n    this.clickBtn = () => {\n      let lists = {\n        type: 'changeList',\n        value: this.state.list.push(this.state.inputValue)\n      };\n      store.dispatch(lists);\n    };\n\n    this.state = store.getState(); // 订阅Redux的状态\n\n    store.subscribe(this.storeChange);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: this.state.inputValue,\n          style: {\n            width: '250px'\n          },\n          onChange: this.changeInputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: this.clickBtn,\n          children: \"\\u589E\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px',\n          width: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          bordered: true,\n          dataSource: this.state.list,\n          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["D:/demo/demo01/src/TodoList.js"],"names":["React","Component","Input","Button","List","store","TodoList","constructor","props","changeInputValue","e","action","type","value","target","dispatch","storeChange","setState","getState","clickBtn","lists","state","list","push","inputValue","subscribe","render","width","margin","item"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAmC,MAAnC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAIA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAOlBC,gBAPkB,GAOEC,CAAD,IAAO;AACxB;AACA;AACA,YAAMC,MAAM,GAAG;AACb;AACAC,QAAAA,IAAI,EAAE,aAFO;AAGb;AACAC,QAAAA,KAAK,EAAEH,CAAC,CAACI,MAAF,CAASD;AAJH,OAAf,CAHwB,CAUxB;AACA;;AACAR,MAAAA,KAAK,CAACU,QAAN,CAAeJ,MAAf;AACD,KApBiB;;AAAA,SAsBlBK,WAtBkB,GAsBJ,MAAM;AAClB,WAAKC,QAAL,CAAcZ,KAAK,CAACa,QAAN,EAAd;AACD,KAxBiB;;AAAA,SA0BlBC,QA1BkB,GA0BP,MAAM;AACf,UAAIC,KAAK,GAAG;AACVR,QAAAA,IAAI,EAAE,YADI;AAEVC,QAAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqB,KAAKF,KAAL,CAAWG,UAAhC;AAFG,OAAZ;AAKAnB,MAAAA,KAAK,CAACU,QAAN,CAAeK,KAAf;AACD,KAjCiB;;AAEhB,SAAKC,KAAL,GAAahB,KAAK,CAACa,QAAN,EAAb,CAFgB,CAGhB;;AACAb,IAAAA,KAAK,CAACoB,SAAN,CAAgB,KAAKT,WAArB;AACD;;AA8BDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,WAAW,EAAE,KAAKL,KAAL,CAAWG,UAD1B;AAEE,UAAA,KAAK,EAAE;AAAEG,YAAAA,KAAK,EAAE;AAAT,WAFT;AAGE,UAAA,QAAQ,EAAE,KAAKlB;AAHjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,OAAO,EAAE,KAAKU,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,KAAK,EAAE;AAACS,UAAAA,MAAM,EAAC,MAAR;AAAgBD,UAAAA,KAAK,EAAC;AAAtB,SAAZ;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,UAAU,EAAE,KAAKN,KAAL,CAAWC,IAFzB;AAGE,UAAA,UAAU,EAAEO,IAAI,iBAAK,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAYA;AAAZ;AAAA;AAAA;AAAA;AAAA;AAHvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAxD8B;;AA2DjC,eAAevB,QAAf","sourcesContent":["// 这句话可以使用imrc快速生成\n// 也可以使用aaa快速生成\nimport React, {Component} from 'react';\n// 引入css样式\nimport 'antd/dist/antd.css';\nimport { Input, Button, List} from 'antd';\nimport store from './store';\n\n\n\nclass TodoList extends Component {\n  constructor(props){\n    super(props);\n    this.state = store.getState();\n    // 订阅Redux的状态\n    store.subscribe(this.storeChange);\n  }\n  \n  changeInputValue = (e) => {\n    // 在控制台打印出文本框的变化\n    // console.log(e.target.value);\n    const action = {\n      // 对action的描述\n      type: 'changeInput',\n      // 要改变的值\n      value: e.target.value,\n    };\n\n    // 通过 dispatch() 方法传递给 store\n    // 这时 Action就已经完全创建完成了，也和store有了联系\n    store.dispatch(action);\n  }\n\n  storeChange = () => {\n    this.setState(store.getState());\n  }\n\n  clickBtn = () => {\n    let lists = {\n      type: 'changeList',\n      value: this.state.list.push(this.state.inputValue),\n    };\n\n    store.dispatch(lists);\n  }\n\n  render() { \n    return ( \n      <div>\n        <div>\n          <Input \n            placeholder={this.state.inputValue} \n            style={{ width: '250px' }} \n            onChange={this.changeInputValue}\n          />\n          <Button type='primary' onClick={this.clickBtn}>增加</Button>\n        </div>\n        <div style={{margin:'10px', width:'300px'}}>\n          <List\n            bordered\n            dataSource={this.state.list}\n            renderItem={item => (<List.Item>{item}</List.Item>)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}