{"ast":null,"code":"import { CHANGE_INPUT, ADD_ITEM, DELETE_ITEM, GET_LIST } from './actionTypes'; // 默认数据\n\nconst defaultState = {\n  inputValue: '',\n  list: []\n}; // state指的是原始仓库里的状态\n// action指的是action新传递的状态\n// Reducer里只能接收state，不能改变state（所以新声明了一个变量，然后用return返回去）\n// eslint-disable-next-line import/no-anonymous-default-export\n\nexport default ((state = defaultState, action) => {\n  // 就是一个方法函数\n\n  /**\n   * action:\n   *  {type: \"changeInput\", value: \"k\"}\n   */\n  if (action.type === CHANGE_INPUT) {\n    let newState = JSON.parse(JSON.stringify(state)); // 深度拷贝state\n\n    newState.inputValue = action.value;\n    return newState;\n  }\n\n  if (action.type === ADD_ITEM) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.push(newState.inputValue); //push新的内容到列表中去\n\n    newState.inputValue = '';\n    return newState;\n  }\n\n  if (action.type === DELETE_ITEM) {\n    //根据type值，编写业务逻辑\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.splice(action.index, 1); //push新的内容到列表中去\n\n    return newState;\n  }\n\n  if (action.type === GET_LIST) {\n    let newState = JSON.parse(JSON.stringify(state));\n    console.log(action);\n    return newState;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["D:/demo/demo01/src/store/reducer.js"],"names":["CHANGE_INPUT","ADD_ITEM","DELETE_ITEM","GET_LIST","defaultState","inputValue","list","state","action","type","newState","JSON","parse","stringify","value","push","splice","index","console","log"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,QAA7C,QAA4D,eAA5D,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAG,EADM;AAEnBC,EAAAA,IAAI,EAAC;AAFc,CAArB,C,CAKA;AACA;AACA;AACA;;AACA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAAG;;AAClD;AACF;AACA;AACA;AACE,MAAGA,MAAM,CAACC,IAAP,KAAgBT,YAAnB,EAAgC;AAC9B,QAAIU,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAf,CAD8B,CACoB;;AAClDG,IAAAA,QAAQ,CAACL,UAAT,GAAsBG,MAAM,CAACM,KAA7B;AACA,WAAOJ,QAAP;AACD;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgBR,QAApB,EAA6B;AAC3B,QAAIS,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAf;AACAG,IAAAA,QAAQ,CAACJ,IAAT,CAAcS,IAAd,CAAmBL,QAAQ,CAACL,UAA5B,EAF2B,CAEe;;AAC1CK,IAAAA,QAAQ,CAACL,UAAT,GAAsB,EAAtB;AACA,WAAOK,QAAP;AACD;;AAED,MAAGF,MAAM,CAACC,IAAP,KAAgBP,WAAnB,EAAgC;AAAE;AAChC,QAAIQ,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAf;AACAG,IAAAA,QAAQ,CAACJ,IAAT,CAAcU,MAAd,CAAqBR,MAAM,CAACS,KAA5B,EAAmC,CAAnC,EAF8B,CAEU;;AACxC,WAAOP,QAAP;AACD;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgBN,QAApB,EAA6B;AAC3B,QAAIO,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAf;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACA,WAAOE,QAAP;AACD;;AAED,SAAOH,KAAP;AACD,CA/BD","sourcesContent":["import {CHANGE_INPUT, ADD_ITEM, DELETE_ITEM, GET_LIST} from './actionTypes'\n\n// 默认数据\nconst defaultState = {\n  inputValue : '',\n  list:[]\n} \n\n// state指的是原始仓库里的状态\n// action指的是action新传递的状态\n// Reducer里只能接收state，不能改变state（所以新声明了一个变量，然后用return返回去）\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = defaultState, action) => {  // 就是一个方法函数\n  /**\n   * action:\n   *  {type: \"changeInput\", value: \"k\"}\n   */\n  if(action.type === CHANGE_INPUT){\n    let newState = JSON.parse(JSON.stringify(state)); // 深度拷贝state\n    newState.inputValue = action.value;\n    return newState;\n  } \n  \n  if (action.type === ADD_ITEM){\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list.push(newState.inputValue);  //push新的内容到列表中去\n    newState.inputValue = '';\n    return newState;\n  }\n\n  if(action.type === DELETE_ITEM ){ //根据type值，编写业务逻辑\n    let newState = JSON.parse(JSON.stringify(state)); \n    newState.list.splice(action.index, 1);  //push新的内容到列表中去\n    return newState;\n  }\n\n  if (action.type === GET_LIST){\n    let newState = JSON.parse(JSON.stringify(state));\n    console.log(action);\n    return newState;\n  }  \n\n  return state;\n}\n\n"]},"metadata":{},"sourceType":"module"}