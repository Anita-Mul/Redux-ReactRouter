{"ast":null,"code":"var _jsxFileName = \"D:\\\\demo\\\\demo01\\\\src\\\\TodoList.js\";\n// 这句话可以使用imrc快速生成\n// 也可以使用aaa快速生成\nimport React, { Component } from 'react'; // 引入css样式\n\nimport 'antd/dist/antd.css';\nimport { Input, Button, List } from 'antd';\nimport store from './store';\nimport { CHANGE_INPUT, CHANGE_LIST } from './store/actionTypes';\nimport { changeInputAction, changeListAction } from './store/actionCreators';\nimport TodoListUI from './TodoListUI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.storeChange = () => {\n      this.setState(store.getState());\n    };\n\n    this.changeInputValue = e => {\n      const action = changeInputAction(e.target.value); // 通过 dispatch() 方法传递给 store\n      // 这时 Action就已经完全创建完成了，也和store有了联系\n\n      store.dispatch(action);\n    };\n\n    this.clickBtn = () => {\n      this.state.list.push(this.state.inputValue);\n      const lists = changeListAction(this.state.list);\n      const action = changeInputAction('');\n      store.dispatch(lists);\n      store.dispatch(action);\n    };\n\n    this.deleteItem = index => {\n      this.state.list.splice(index, 1);\n      const lists = changeListAction(this.state.list);\n      store.dispatch(lists);\n    };\n\n    this.state = store.getState(); // 订阅Redux的状态\n\n    store.subscribe(this.storeChange);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(TodoListUI, {\n      inputValue: this.state.inputValue,\n      list: this.state.list,\n      changeInputValue: this.changeInputValue,\n      clickBtn: this.clickBtn,\n      deleteItem: this.deleteItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["D:/demo/demo01/src/TodoList.js"],"names":["React","Component","Input","Button","List","store","CHANGE_INPUT","CHANGE_LIST","changeInputAction","changeListAction","TodoListUI","TodoList","constructor","props","storeChange","setState","getState","changeInputValue","e","action","target","value","dispatch","clickBtn","state","list","push","inputValue","lists","deleteItem","index","splice","subscribe","render"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAmC,MAAnC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,YAAT,EAAwBC,WAAxB,QAA2C,qBAA3C;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAmD,wBAAnD;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAC/BW,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAOlBC,WAPkB,GAOJ,MAAM;AAClB,WAAKC,QAAL,CAAcV,KAAK,CAACW,QAAN,EAAd;AACD,KATiB;;AAAA,SAWlBC,gBAXkB,GAWEC,CAAD,IAAO;AACxB,YAAMC,MAAM,GAAGX,iBAAiB,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAAhC,CADwB,CAGxB;AACA;;AACAhB,MAAAA,KAAK,CAACiB,QAAN,CAAeH,MAAf;AACD,KAjBiB;;AAAA,SAmBlBI,QAnBkB,GAmBP,MAAM;AACf,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqB,KAAKF,KAAL,CAAWG,UAAhC;AACA,YAAMC,KAAK,GAAGnB,gBAAgB,CAAC,KAAKe,KAAL,CAAWC,IAAZ,CAA9B;AACA,YAAMN,MAAM,GAAGX,iBAAiB,CAAC,EAAD,CAAhC;AAEAH,MAAAA,KAAK,CAACiB,QAAN,CAAeM,KAAf;AACAvB,MAAAA,KAAK,CAACiB,QAAN,CAAeH,MAAf;AACD,KA1BiB;;AAAA,SA4BlBU,UA5BkB,GA4BJC,KAAD,IAAW;AACtB,WAAKN,KAAL,CAAWC,IAAX,CAAgBM,MAAhB,CAAuBD,KAAvB,EAA8B,CAA9B;AACA,YAAMF,KAAK,GAAGnB,gBAAgB,CAAC,KAAKe,KAAL,CAAWC,IAAZ,CAA9B;AAEApB,MAAAA,KAAK,CAACiB,QAAN,CAAeM,KAAf;AACD,KAjCiB;;AAEhB,SAAKJ,KAAL,GAAanB,KAAK,CAACW,QAAN,EAAb,CAFgB,CAGhB;;AACAX,IAAAA,KAAK,CAAC2B,SAAN,CAAgB,KAAKlB,WAArB;AACD;;AA8BDmB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,UAAD;AACE,MAAA,UAAU,EAAE,KAAKT,KAAL,CAAWG,UADzB;AAEE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,IAFnB;AAGE,MAAA,gBAAgB,EAAE,KAAKR,gBAHzB;AAIE,MAAA,QAAQ,EAAE,KAAKM,QAJjB;AAKE,MAAA,UAAU,EAAE,KAAKM;AALnB;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA9C8B;;AAiDjC,eAAelB,QAAf","sourcesContent":["// 这句话可以使用imrc快速生成\n// 也可以使用aaa快速生成\nimport React, {Component} from 'react';\n// 引入css样式\nimport 'antd/dist/antd.css';\nimport { Input, Button, List} from 'antd';\nimport store from './store';\nimport { CHANGE_INPUT , CHANGE_LIST } from './store/actionTypes';\nimport { changeInputAction, changeListAction} from './store/actionCreators';\nimport TodoListUI from './TodoListUI';\n\nclass TodoList extends Component {\n  constructor(props){\n    super(props);\n    this.state = store.getState();\n    // 订阅Redux的状态\n    store.subscribe(this.storeChange);\n  }\n  \n  storeChange = () => {\n    this.setState(store.getState());\n  }\n\n  changeInputValue = (e) => {\n    const action = changeInputAction(e.target.value);\n\n    // 通过 dispatch() 方法传递给 store\n    // 这时 Action就已经完全创建完成了，也和store有了联系\n    store.dispatch(action);\n  }\n\n  clickBtn = () => {\n    this.state.list.push(this.state.inputValue)\n    const lists = changeListAction(this.state.list);\n    const action = changeInputAction('');\n\n    store.dispatch(lists);\n    store.dispatch(action);\n  }\n\n  deleteItem = (index) => {\n    this.state.list.splice(index, 1);\n    const lists = changeListAction(this.state.list);\n\n    store.dispatch(lists);\n  };\n\n  render() { \n    return ( \n      <TodoListUI \n        inputValue={this.state.inputValue}\n        list={this.state.list}\n        changeInputValue={this.changeInputValue}\n        clickBtn={this.clickBtn}\n        deleteItem={this.deleteItem}\n      />\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}