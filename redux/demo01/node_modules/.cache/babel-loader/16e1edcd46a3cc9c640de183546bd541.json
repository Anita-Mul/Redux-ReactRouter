{"ast":null,"code":"// 默认数据\nconst defaultState = {\n  inputValue: 'Write Something',\n  list: ['早上4点起床，锻炼身体', '中午下班游泳一小时']\n}; // state: 是整个项目中需要管理的数据信息，这里我们没有什么数据，所以用空对象来表示\n// state指的是原始仓库里的状态\n// action指的是action新传递的状态\n// Reducer里只能接收state，不能改变state\n\nexport default ((state = defaultState, action) => {\n  // 就是一个方法函数\n  // if(action.type === 'changeInput'){\n  //   let newState = JSON.parse(JSON.stringify(state)); // 深度拷贝state\n  //   newState.inputValue = action.value;\n  //   return newState;\n  // } else if (action.type === 'changeList'){\n  //   let newState = JSON.parse(JSON.stringify(state)); // 深度拷贝state\n  //   newState.list = action.value;\n  //   return newState;\n  // }\n  if (!action) {\n    let newState = JSON.parse(JSON.stringify(state)); // 深度拷贝state\n\n    newState.action.type = action.value;\n    return newState;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["D:/demo/demo01/src/store/reducer.js"],"names":["defaultState","inputValue","list","state","action","newState","JSON","parse","stringify","type","value"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAG,iBADM;AAEnBC,EAAAA,IAAI,EAAC,CACD,aADC,EAED,WAFC;AAFc,CAArB,C,CAOA;AACA;AACA;AACA;;AACA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAG,CAACA,MAAJ,EAAW;AACT,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,KAAf,CAAX,CAAf,CADS,CACyC;;AAClDE,IAAAA,QAAQ,CAACD,MAAT,CAAgBK,IAAhB,GAAuBL,MAAM,CAACM,KAA9B;AACA,WAAOL,QAAP;AACD;;AAED,SAAOF,KAAP;AACD,CAlBD","sourcesContent":["// 默认数据\nconst defaultState = {\n  inputValue : 'Write Something',\n  list:[\n      '早上4点起床，锻炼身体',\n      '中午下班游泳一小时'\n  ]\n} \n// state: 是整个项目中需要管理的数据信息，这里我们没有什么数据，所以用空对象来表示\n// state指的是原始仓库里的状态\n// action指的是action新传递的状态\n// Reducer里只能接收state，不能改变state\nexport default (state = defaultState, action) => {  // 就是一个方法函数\n  // if(action.type === 'changeInput'){\n  //   let newState = JSON.parse(JSON.stringify(state)); // 深度拷贝state\n  //   newState.inputValue = action.value;\n  //   return newState;\n  // } else if (action.type === 'changeList'){\n  //   let newState = JSON.parse(JSON.stringify(state)); // 深度拷贝state\n  //   newState.list = action.value;\n  //   return newState;\n  // }\n\n  if(!action){\n    let newState = JSON.parse(JSON.stringify(state)); // 深度拷贝state\n    newState.action.type = action.value;\n    return newState;\n  }\n\n  return state;\n}\n\n"]},"metadata":{},"sourceType":"module"}